% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quoll.R
\name{colorspec_vector}
\alias{colorspec_vector}
\alias{colorspec_matrix}
\alias{vertex_colspec}
\alias{edge_colspec}
\title{Graph color features}
\usage{
colorspec_vector(A, palette = c("aliceblue"))

colorspec_matrix(A, palette = c("gray80", "gray90"))

vertex_colspec(A, vertex.col = "aliceblue", ...)

edge_colspec(A, edge.col = "gray80", loop.col = "gray90", ...)
}
\arguments{
\item{A}{an adjacency matrix}

\item{palette}{a vector of colors}

\item{vertex.col}{the default vertex colour}

\item{...}{symbolic vertex and edge coloring directives}

\item{edge.col}{the default edge colour}

\item{loop.col}{the default loop color}
}
\value{
a colorspec vector or matrix
}
\description{
Specify the colouring of vertices and edges in a graph or
digraph diagram.
}
\details{
In the graph diagrams created by \code{\link[=graph_diagram]{graph_diagram()}},
\code{\link[=digraph_diagram]{digraph_diagram()}}, and \code{\link[=community_diagram]{community_diagram()}}, vertex colours are
specified by a vector of color indices into a palette of vertex
colours, and edge colours are specified by a matrix of color
indices into a palette of edge colours.

The \code{colorspec_vector} and \code{colorspec_matrix} functions create
vectors and matrices to specify edge and vertex colours.  By
default, all vertices are given the first colour in the vertex
palette, and all edges are given the first colour in the edge
palette.  The user can then modify these as desired.

The \code{vertex_colorspec} and \code{edge_colorspec} functions create
colorspec vectors and matrices from a symbolic representation of
vertex and edge colors. For \code{vertex_colorspec}, a vector of vertex
names is given a named argument that determines the colour applied
to those vertices.  For \code{edge_colorspec}, a block of edge
specifications is given as a named argument that determines the
colour applied to those edges.  The symbolic representation only
identifies the (directed) edges to be coloured - it cannot create
or change edges.
}
\examples{
# Define a directed graph
A <- digraph({
  vertices(A,B,C,D,E)
  A \%->\% B \%->\% D
  A \%->\% C \%->\% D
  B \%<->\% E
})
# Specify vertex colors
g <- digraph_diagram(A,
  vertex.col=vertex_colspec(A,orange=c(A,D)),
  edge.col=edge_colspec(A,tomato={A \%->\% B \%->\% D},
                          orangered={A \%->\% C \%->\% D}))
cat(g)
}
